// mixins (and placeholders)

// 1) components
// - headings, labels, links, etc

// 2) elements
// - groups of components - e.g. for cards


// ––––––––––––––––––––––––––––––––––––––––––––––––––
// 1) components

// wraps long anchor links
%anchor-wrap {
    // These are technically the same, but use both */
    overflow-wrap: break-word;
    word-wrap: break-word;

    -ms-word-break: break-all;
    /* This is the dangerous one in WebKit, as it breaks things wherever */
    word-break: break-all;
    /* Instead use this non-standard one: */
    word-break: break-word;

    /* Adds a hyphen where the word breaks, if supported (No Blink) */
    -ms-hyphens: auto;
    -moz-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
}


@mixin roundDiv($border, $bg) {
    position : relative; // required for absolutely positioned child elements
    border : 5px solid $border;
    border-radius : 2.5rem;
    margin-bottom : 5rem;
    padding : 2.5rem;
    box-sizing : border-box;
    @if $bg != '' {
        background-color : $bg;
    }
}
// rounded heading
@mixin contextHeading($colour, $bg) {
    display : inline-block;
    font-style : italic;
    margin : 0;
    margin-left : calc(2.5rem + 5px);
    padding : 0 2rem;
    height : 48px;
    line-height : calc(48px + 5px);
    border-radius : 2.5rem 2.5rem 0 0;
    color : $colour;
    background-color : $bg;
}

// –––––––––––––––––––––––––––
// labels
// - blog pages h2 + category and tag h1
// large
@mixin labelHeading {
    display : inline-block;
    font-style : italic;
    margin : 0;
    padding : 0 2rem;
    box-sizing : border-box;
    background-color : $green;
    color : $white;
    @content;
}

@mixin headingIcon($left_right, $icon) {
    position : relative;
    padding-#{$left_right} : 5rem;
    &:before {
        font-family : $font-icon;
        position : absolute;
        top : 0;
        content : icon($icon);
        @if $left_right == 'left' {
            left : 1rem;
        }
        @if $left_right == 'right' {
            right : 1rem;
        }
    }
    @content;
}

// small
// - categories widget
@mixin labelLink {
    display : inline-block;
    font-style : normal;
    position : relative;
    padding : .4rem 1.2rem;
    box-sizing : border-box;
    background-color : $green;
    color : $white;
    @content;
}
@mixin linkChevron($colour, $bg, $bg_hover) {
    position : relative;
    padding-right : 3.5rem;
    color : $colour;
    background-color : $bg;
    &:after {
        font-family : $font-icon;
        position : absolute;
        right : 1rem;
        top : .4rem;
        transition : all ease-in-out .3s;
        content : icon('right');
    }
    &:hover {
        color : $colour;
        background-color : $bg_hover;
        &:after {
            right : .5rem;
        }
      }
    @content;
}


// post nav
@mixin navChevron($left_right, $before_after) {
    position : relative;
    @if $left_right == 'left' {
        padding-left : 3.5rem;
    }
    @if $left_right == 'right' {
        padding-right : 3.5rem;
    }
    &:#{$before_after} {
        font-family : $font-icon;
        position : absolute;
        #{$left_right} : 1rem;
        top : 0;
        transition : all ease-in-out .3s;
        content : icon('#{$left_right}');
    }
    @content;
}




// ––––––––––––––––––––––––––––––––––––––––––––––––––
// 2) elements

// card: featured post, services page, latest post
// - landscape and portrait
// - portrait only over a certain breakpoint, portrait = default

// - styles that apply to both mixins are added directly into .card class

// card: landscape
@mixin cardLandscape($height) {
    
    height : $height;
    overflow : hidden;

    // image
    .card-thumb {
        position : absolute;
        top : 0;
        left : 0;
        right : 65%;
        background-color : $grey_pale;
        color : $grey;
        text-align : center;
        height : calc(#{$height} - 10px);
        overflow : hidden;
        div {
            padding : 2.5rem;
        }

        img {
            position : absolute;
            left : -75%;
            min-height : calc(#{$height} - 10px);
            width : auto;         
        }
    }

    // content
    .card-content {
        position : absolute;
        top : 0;
        left : 35%;
        right : 0;
        height : calc(#{$height} - 10px);
        overflow : hidden;
        padding : 0 2.5rem;
    }
}

@mixin landscapeReset($height) {
    height : auto;
    padding-top : $height;
    .card-thumb {
        right : 0;
        height : $height;
        img {
            position : relative;
            left : 0;
        }
    }
    .card-content {
        position : relative;
        left : 0;
        height : auto;
        padding : 0;
    }
}




// card: portrait
// - arg: height of image
@mixin cardPortrait($imgHeight) {
    padding-top : $imgHeight;
    overflow : hidden;
    
    // thumbnail
    .card-thumb {
        position : absolute;
        top : 0;
        left : 0;
        right : 0;
        height :$imgHeight;
        overflow : hidden;
        //
        background-color : $grey_pale;
        color : $grey;
        text-align : center;
        img {
          margin : 0;
          height : auto;
          max-width : none;
          min-height : $imgHeight;
        }
    }
}






// –––––––––––––––––––––––––––
// top border colours - sidebars and blog posts
@mixin topBorderPara {
    padding-top : 2.5rem;
    border-top : 10px solid transparent;
    // enforce bold italic on sidebars
    .five.columns & {
        h3,
        h4 {
            font-style : italic;
        }
    }
    h3,
    h4 {
        color : $grey;
        line-height : 1.4;
        a {
            text-decoration : none;
        }
    }
    
    // output different border colours
    $colours : 'green', 'orange', 'blue', 'red';   
    $colour_codes : $green, $orange, $blue, $red;
    $dark-colour_codes : $green_dark, $orange_dark, $blue_dark, $red_dark;
    @for $i from 1 through length($colours) {
        &.#{nth($colours, $i)} {
            border-top-color : nth($colour_codes, $i);
            a {
            color : nth($colour_codes, $i);
                &:hover {
                    color : nth($dark-colour_codes, $i);
                }
            }
        }
    }

    // add more spacing to top when small
    margin-top : 2.5rem;
    @media (min-width: 660px) {
        margin-top : 0;
    }


    @content;
}




// affiliate images
// - applies to gallery too
@mixin galleryImg($breakpoint, $is_gallery) {
    .img-col,
    > dl.gallery-item {
        display : inline-block;
        padding: 1.5rem;
        @media (min-width: $breakpoint) {
            padding: 2.5rem;
        }
    }
    img {
        width: auto;
        height: auto;
        vertical-align: middle;
        max-width : 150px;
        max-height : 150px;
        @media (min-width: $breakpoint) {
            max-width : 200px;
            max-height : 200px;
        }
        // gallery resets
        @if $is_gallery == true {
            border : 0 !important;
            margin : 0 !important;
            a,
            a:hover,
            a:active {
                border : 0 !important;
            }
        }
    }
}