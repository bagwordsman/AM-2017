// hero section
// - section, image, overlay, heading
// - home: text, home: right hand column

.hero {
  
  // section
  overflow : hidden;
  position : relative;
  margin-bottom : 4rem;
  background-color : $green;
  // font size reset
  font-size: 1.8rem;
  line-height: 1.6;
  // height
  @media (min-width: 980px) {
    max-height : 55rem;
  }
  body:not(.home) & {
    @media (min-width: 400px) {
      max-height : 24rem;
    }
    @media (min-width: 800px) {
      min-height : 32rem;
      max-height : auto;
    }
  }
  
  
  // image
  img {
    height : auto;
    min-height : auto;
    max-height : 85rem;
    width : 100%;
    opacity : .75;
    // home image needs to be larger to fill full height
    .home & {
      width : auto;
      min-height : 25rem;
      @media (min-width: 980px) {
        max-width : 100%;
        max-height : auto;
      }
      @media (min-width: 1800px) {
        width : 100%;
        max-height : 100%;
      }
    }
  }


  // content container
  > div {
    position : absolute;
    top : 0;
    right : 0;
    bottom : 0;
    left : 0;
    z-index : 3;
    color : $white;
  }


  // heading
  h1 {
    display : block;
    margin-top : 4rem;
    line-height : 1.4;
    color : $white;
    text-shadow : $text-outline;
    body:not(.home) & {
      margin-top : 6rem;
      text-align : center;
      @media (min-width: 600px) {
        margin-top : 7.2rem;
      }
      @media (min-width: 800px) {
        margin-top : 9.6rem;
        font-size: 4.8rem;
      }
    } 
  }


  // divider and mesh overlay
  .divider {
    bottom : -10px;
    z-index : 4; // is this required on every instance?
  }
  .mesh {
    padding : 0;
    background : rgba(0, 0, 0, 0.25) url("../img/mesh.png") repeat scroll 0 0;
    + .divider:before,
    + .divider:after {
      z-index : 3;
    }
  }
  






  // ––––––––––––––––––––––––––––––––––––––––––––––––––
  // home page specific

  // columns reset
  .columns {
    width : 100%;
    margin-left : 0;
    // width reset
    @media (min-width: 980px) {
      &.seven {
        width : 56.6666666667%;
      }
      &.five {
        width : 39.3333333333%;
        margin-left : 4%;
      }
    }
  }


  // links
  a:not(.button) {
    color : $white;
    padding : 2px 5px;
    background-color : $green;
    &:hover {
      background-color : $orange;
    }
  }

  // button reset
  a.button {
    margin-bottom : 0;
  }


  // right hand column / overlay
  $colour_classes : 'green', 'orange', 'blue', 'red';
  $colour_codes : $green, $orange, $blue, $red;
  $colour_link : $green_dark, $orange_dark, $orange, $blue;
  $colour_hover : $orange, $green, $orange, $blue;  
  
  .overlay {
    margin-top : 3rem;
    padding : 2.5rem;
    box-sizing : border-box;
    border-radius : 1.5rem;
    box-shadow : $shadow-down-right;

    @media (min-width: 980px) {
      position : absolute;
      right : 0;
      margin-top : 0;
      padding : 4rem 2.5rem 2.5rem;
      border-radius : 0 0 1.5rem 1.5rem;
    }
    
    // output different background colours
    @for $i from 1 through length($colour_classes) {
      &.#{nth($colour_classes, $i)} {
        background-color : rgba( nth($colour_codes, $i), .75 );
        a:not(.button) {
          background-color : nth($colour_link, $i);
          &:hover {
            background-color : nth($colour_hover, $i);
          }
        }
      }
    }

    ul {
      list-style : none;
      margin-bottom : 0;
    }
  }


} // end hero